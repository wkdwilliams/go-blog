package views

import (
	"github.com/wkdwilliams/go-blog/internal/adapters/primary/web/views/layout"
	"github.com/wkdwilliams/go-blog/internal/domain/models"
	"github.com/wkdwilliams/go-blog/pkg/context_helper"
)

templ Home(posts []models.Post) {
	@layout.Base() {
		<!-- Hero Section -->
		<section class="hero-section">
			<div class="container">
				<h1>Welcome to My Dev Blog</h1>
				<span id="sub-desciption"></span>
			</div>
		</section>
		<!-- Blog Posts Section -->
		<div class="container my-5">
			<div class="row">
				for _, v := range posts {
					<div class="col-md-6 blog-post">
						<h2>{ v.Title }</h2>
						if context_helper.UserIsLoggedInFromContext(ctx) {
							<p class="blog-post-meta">{ v.CreatedAt.Format("January 2, 2006") } by <a href="#">{ v.User.Name }</a> | <a onclick="deletePost(event)" href={ templ.SafeURL("/admin/post/delete/" + v.ID.String()) }>Delete</a> | <a href={ templ.SafeURL("/admin/post/edit/" + v.ID.String()) }>Edit</a></p>
						} else {
							<p class="blog-post-meta">{ v.CreatedAt.Format("January 2, 2006") } by <a href="#">{ v.User.Name }</a></p>
						}
						@templ.Raw(v.Content)
					</div>
				}
			</div>
		</div>
		<script>
		window.onload = function() {
			const text = "This blog was coded entirely in <b>Golang</b>";

			if(localStorage.getItem("loaded") != null){
				document.getElementById("sub-desciption").innerHTML = text;
				return;
			}
    		const typed = new Typed('#sub-desciption', {
      			strings: [text],
      			typeSpeed: 40,
				onComplete: (self) => {
					typed.destroy();
					document.getElementById("sub-desciption").innerHTML = text;
				},
    		});
			localStorage.setItem("loaded", 1)
		};

		function deletePost(event) {
			event.preventDefault();
			Swal.fire({
  				title: "Are you sure?",
  				// text: "You won't be able to revert this!",
  				icon: "warning",
  				showCancelButton: true,
  				confirmButtonColor: "#3085d6",
  				cancelButtonColor: "#d33",
  				confirmButtonText: "Yes, delete it!"
			}).then((result) => {
  				if (result.isConfirmed) {
    				window.location.href = event.target.href;
  				}
			});
		}
	</script>
	}
}
